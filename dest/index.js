class Result{constructor(s,e){this.val=s,this.isSuccessValue=e}}const Success=function(s){return new Result(s,!0)},Fail=function(s){return new Result(s,!1)},curry=function(s){return function e(...r){return s.length<=r.length?s.apply(this,r):(...s)=>e.apply(this,[...r,...s])}},rules={required:curry(e=>s=>null==s||"string"==typeof s&&0===s.trim().length?Fail(e):Success(s)),email:curry(e=>s=>/(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|"(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])/.test(s)?Success(s):Fail(e)),url:curry(e=>s=>/https?:\/\/(www\.)?[-a-zA-Z0-9@:%._\+~#=]{1,256}\.[a-zA-Z0-9()]{1,6}\b([-a-zA-Z0-9()@:%_\+.~#?&//=]*)/.test(s)?Success(s):Fail(e)),cellphone:curry(e=>s=>/^01\d[-\s]*\d{3,4}[-\s]*\d{4}$/.test(s)?Success(s):Fail(e)),minLength:curry(r=>e=>s=>s.trim().length>=r?Success(s):Fail(e)),maxLength:curry(r=>e=>s=>s.trim().length<=r?Success(s):Fail(e)),gte:curry(r=>e=>s=>r<=s?Success(s):Fail(e)),lte:curry(r=>e=>s=>s<=r?Success(s):Fail(e)),gt:curry(r=>e=>s=>r<s?Success(s):Fail(e)),lt:curry(r=>e=>s=>s<r?Success(s):Fail(e)),regex:curry(r=>e=>s=>r.test(s)?Success(s):Fail(e)),numeric:curry(e=>s=>"number"==typeof s||/^\d+$/.test(s)?Success(s):Fail(e)),alphaNumeric:curry(e=>s=>/^[\da-zA-Z]+$/.test(s)?Success(s):Fail(e)),same:curry(c=>(s=[])=>{const[e,...r]=s;return r.every(s=>s===e)?Success(s):Fail(c)}),diff:curry(e=>(s=[])=>[...new Set(s)].length===s.length?Success(s):Fail(e)),custom:curry(r=>e=>s=>r(s)?Success(s):Fail(e))},FV=s=>{const e=s.map(e=>{const s=e.rules.map(s=>s(e.value));return{key:e.key,result:s,isPassed:s.every(({isSuccessValue:s})=>s)}});var s=Object.fromEntries(e.map(s=>[s.key,{messages:s.result.filter(s=>!s.isSuccessValue).map(({val:s})=>s),isPassed:s.isPassed}])),r=e.filter(s=>!s.isPassed).map(s=>s.result.filter(({isSuccessValue:s})=>!s).map(({val:s})=>s)).flat(),c=r.length;const t=0===c,u=t?"":r[0],a=t?"":r[c-1];return{result:s,messages:r,firstMessage:u,lastMessage:a,isPassed:t,orFirst:(s,e)=>t?s():e(u),orLast:(s,e)=>t?s():e(a)}},r=rules;export{FV,r};
